// stable synth x = {
//                   a:3, b:"hi da",
//                   c:True, d:|True or 4|, 
//                   e:{
//                      f:"nest test", g:34, 
//                      h:1+42, i:|0|
//                     }
//                  };
// eject.out(x);
// eject.out("ooooooooooooooooooooooooooooooooooo");
// eject.debug(x);

// synth planet printer(x){
//     eject.out(x);
// };

// printer(9);

// synth planet calcResults(x, y) {
//     eject.out("Addition Result: ", add(x, y));
//     eject.out("Subtraction Result: ", sub(x, y));
//     eject.out("Multiplication Result: ", mul(x, y));
//     eject.out("Division Result: ", div(x, y));
//     eject.out("Remainder Result: ", rem(x, y));
// };

// synth x = 4;
// synth y = 3;
// eject.out("TESTS FOR X=4 AND Y=3");
// calcResults(x, y);
// eject.out("======================");
// eject.out("Input Value for X: ");
// x = capture.magnitude();
// eject.out("Input Value for Y: ");
// y = capture.magnitude();
// calcResults(x, y);

// law |True and False| valid  {
//     eject.out("law 1");
// };

// law |True and False| invalid  {
//     eject.out("law 2");
// };

// law |True or False| valid  {
//     eject.out("law 3");
// };

// law |True or False| invalid  {
//     eject.out("law 4");
// };

// synth h = 5;

// law |h| valid orbit {
//     eject.out(h);
//     h = h-1;
// };

// law |h| invalid orbit {
//     eject.out(h);
//     h = h+1;
// };

// synth z = 1+x.a+2*1+True;
// eject.out(z);

// synth n = <"hi"..x.a.."jo">;
// n = 1 + "hi" + True;
// eject.debug(<True>);

// eject.out(<"hi "..(4+2).." "..|True or False|>);

// eject.debug(<|True and False|>);

// stable synth h = [4, 3, 2, "ji", True, |False or True|];
// eject.debug(h);
// eject.out(h);

stable synth x = "hello";
eject.out(x.count());
eject.out(x.reverse());